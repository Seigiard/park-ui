{
  "files": [
    {
      "filename": "tabs.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, Tabs } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { tabs } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tabs)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<Assign<HTMLStyledProps<'div'>, Tabs.RootProviderProps>>(\n  Tabs.RootProvider,\n  'root',\n)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, Tabs.RootProps>>(Tabs.Root, 'root')\n\nexport type ContentProps = ComponentProps<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Tabs.ContentProps>>(\n  Tabs.Content,\n  'content',\n)\n\nexport type IndicatorProps = ComponentProps<typeof Indicator>\nexport const Indicator = withContext<Assign<HTMLStyledProps<'div'>, Tabs.IndicatorProps>>(\n  Tabs.Indicator,\n  'indicator',\n)\n\nexport type ListProps = ComponentProps<typeof List>\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Tabs.ListProps>>(Tabs.List, 'list')\n\nexport type TriggerProps = ComponentProps<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Tabs.TriggerProps>>(\n  Tabs.Trigger,\n  'trigger',\n)\n\nexport {\n  TabsContext as Context,\n  type TabsContextProps as ContextProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
