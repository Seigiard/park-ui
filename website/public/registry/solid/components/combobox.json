{
  "files": [
    {
      "filename": "combobox.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, Combobox } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { combobox } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(combobox)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<Combobox.RootProviderProps>(Combobox.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<Combobox.RootProps>(Combobox.Root)\n\nexport type ClearTriggerProps = ComponentProps<typeof ClearTrigger>\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Combobox.ClearTriggerProps>\n>(Combobox.ClearTrigger, 'clearTrigger')\n\nexport type ContentProps = ComponentProps<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ContentProps>>(\n  Combobox.Content,\n  'content',\n)\n\nexport type ControlProps = ComponentProps<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ControlProps>>(\n  Combobox.Control,\n  'control',\n)\n\nexport type InputProps = ComponentProps<typeof Input>\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, Combobox.InputProps>>(\n  Combobox.Input,\n  'input',\n)\n\nexport type ItemGroupLabelProps = ComponentProps<typeof ItemGroupLabel>\nexport const ItemGroupLabel = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupLabelProps>\n>(Combobox.ItemGroupLabel, 'itemGroupLabel')\n\nexport type ItemGroupProps = ComponentProps<typeof ItemGroup>\nexport const ItemGroup = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupProps>>(\n  Combobox.ItemGroup,\n  'itemGroup',\n)\n\nexport type ItemIndicatorProps = ComponentProps<typeof ItemIndicator>\nexport const ItemIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemIndicatorProps>\n>(Combobox.ItemIndicator, 'itemIndicator')\n\nexport type ItemProps = ComponentProps<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemProps>>(\n  Combobox.Item,\n  'item',\n)\n\nexport type ItemTextProps = ComponentProps<typeof ItemText>\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, Combobox.ItemTextProps>>(\n  Combobox.ItemText,\n  'itemText',\n)\n\nexport type LabelProps = ComponentProps<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Combobox.LabelProps>>(\n  Combobox.Label,\n  'label',\n)\n\nexport type ListProps = ComponentProps<typeof List>\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ListProps>>(\n  Combobox.List,\n  'list',\n)\n\nexport type PositionerProps = ComponentProps<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Combobox.PositionerProps>>(\n  Combobox.Positioner,\n  'positioner',\n)\n\nexport type TriggerProps = ComponentProps<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Combobox.TriggerProps>>(\n  Combobox.Trigger,\n  'trigger',\n)\n\nexport {\n  ComboboxContext as Context,\n  type ComboboxContextProps as ContextProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
