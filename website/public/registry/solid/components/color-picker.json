{
  "files": [
    {
      "filename": "color-picker.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, ColorPicker } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { colorPicker } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.RootProviderProps>\n>(ColorPicker.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, ColorPicker.RootProps>>(\n  ColorPicker.Root,\n  'root',\n)\n\nexport type AreaBackgroundProps = ComponentProps<typeof AreaBackground>\nexport const AreaBackground = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.AreaBackgroundProps>\n>(ColorPicker.AreaBackground, 'areaBackground')\n\nexport type AreaProps = ComponentProps<typeof Area>\nexport const Area = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.AreaProps>>(\n  ColorPicker.Area,\n  'area',\n)\n\nexport type AreaThumbProps = ComponentProps<typeof AreaThumb>\nexport const AreaThumb = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.AreaThumbProps>>(\n  ColorPicker.AreaThumb,\n  'areaThumb',\n)\n\nexport type ChannelInputProps = ComponentProps<typeof ChannelInput>\nexport const ChannelInput = withContext<\n  Assign<HTMLStyledProps<'input'>, ColorPicker.ChannelInputProps>\n>(ColorPicker.ChannelInput, 'channelInput')\n\nexport type ChannelSliderLabelProps = ComponentProps<typeof ChannelSliderLabel>\nexport const ChannelSliderLabel = withContext<\n  Assign<HTMLStyledProps<'label'>, ColorPicker.ChannelSliderLabelProps>\n>(ColorPicker.ChannelSliderLabel, 'channelSliderLabel')\n\nexport type ChannelSliderProps = ComponentProps<typeof ChannelSlider>\nexport const ChannelSlider = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderProps>\n>(ColorPicker.ChannelSlider, 'channelSlider')\n\nexport type ChannelSliderThumbProps = ComponentProps<typeof ChannelSliderThumb>\nexport const ChannelSliderThumb = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderThumbProps>\n>(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\n\nexport type ChannelSliderTrackProps = ComponentProps<typeof ChannelSliderTrack>\nexport const ChannelSliderTrack = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderTrackProps>\n>(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\n\nexport type ChannelSliderValueTextProps = ComponentProps<typeof ChannelSliderValueText>\nexport const ChannelSliderValueText = withContext<\n  Assign<HTMLStyledProps<'span'>, ColorPicker.ChannelSliderValueTextProps>\n>(ColorPicker.ChannelSliderValueText, 'channelSliderValueText')\n\nexport type ContentProps = ComponentProps<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ContentProps>>(\n  ColorPicker.Content,\n  'content',\n)\n\nexport type ControlProps = ComponentProps<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ControlProps>>(\n  ColorPicker.Control,\n  'control',\n)\n\nexport type EyeDropperTriggerProps = ComponentProps<typeof EyeDropperTrigger>\nexport const EyeDropperTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.EyeDropperTriggerProps>\n>(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\n\nexport type FormatSelectProps = ComponentProps<typeof FormatSelect>\nexport const FormatSelect = withContext<\n  Assign<HTMLStyledProps<'select'>, ColorPicker.FormatSelectProps>\n>(ColorPicker.FormatSelect, 'formatSelect')\n\nexport type FormatTriggerProps = ComponentProps<typeof FormatTrigger>\nexport const FormatTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.FormatTriggerProps>\n>(ColorPicker.FormatTrigger, 'formatTrigger')\n\nexport type LabelProps = ComponentProps<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, ColorPicker.LabelProps>>(\n  ColorPicker.Label,\n  'label',\n)\n\nexport type PositionerProps = ComponentProps<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.PositionerProps>>(\n  ColorPicker.Positioner,\n  'positioner',\n)\n\nexport type SwatchGroupProps = ComponentProps<typeof SwatchGroup>\nexport const SwatchGroup = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchGroupProps>\n>(ColorPicker.SwatchGroup, 'swatchGroup')\n\nexport type SwatchIndicatorProps = ComponentProps<typeof SwatchIndicator>\nexport const SwatchIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchIndicatorProps>\n>(ColorPicker.SwatchIndicator, 'swatchIndicator')\n\nexport type SwatchProps = ComponentProps<typeof Swatch>\nexport const Swatch = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchProps>>(\n  ColorPicker.Swatch,\n  'swatch',\n)\n\nexport type SwatchTriggerProps = ComponentProps<typeof SwatchTrigger>\nexport const SwatchTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.SwatchTriggerProps>\n>(ColorPicker.SwatchTrigger, 'swatchTrigger')\n\nexport type TransparencyGridProps = ComponentProps<typeof TransparencyGrid>\nexport const TransparencyGrid = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.TransparencyGridProps>\n>(ColorPicker.TransparencyGrid, 'transparencyGrid')\n\nexport type TriggerProps = ComponentProps<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, ColorPicker.TriggerProps>>(\n  ColorPicker.Trigger,\n  'trigger',\n)\n\nexport type ValueSwatchProps = ComponentProps<typeof ValueSwatch>\nexport const ValueSwatch = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ValueSwatchProps>\n>(ColorPicker.ValueSwatch, 'valueSwatch')\n\nexport type ValueTextProps = ComponentProps<typeof ValueText>\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, ColorPicker.ValueTextProps>>(\n  ColorPicker.ValueText,\n  'valueText',\n)\n\nexport type ViewProps = ComponentProps<typeof View>\nexport const View = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ViewProps>>(\n  ColorPicker.View,\n  'view',\n)\n\nexport {\n  ColorPickerContext as Context,\n  type ColorPickerContextProps as ContextProps,\n  ColorPickerHiddenInput as HiddenInput,\n  type ColorPickerHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
