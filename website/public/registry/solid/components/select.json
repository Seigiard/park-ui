{
  "files": [
    {
      "filename": "select.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, Select } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { select } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(select)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<Select.RootProviderProps>(Select.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<Select.RootProps>(Select.Root)\n\nexport type ClearTriggerProps = ComponentProps<typeof ClearTrigger>\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Select.ClearTriggerProps>\n>(Select.ClearTrigger, 'clearTrigger')\n\nexport type ContentProps = ComponentProps<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Select.ContentProps>>(\n  Select.Content,\n  'content',\n)\n\nexport type ControlProps = ComponentProps<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Select.ControlProps>>(\n  Select.Control,\n  'control',\n)\n\nexport type IndicatorProps = ComponentProps<typeof Indicator>\nexport const Indicator = withContext<Assign<HTMLStyledProps<'div'>, Select.IndicatorProps>>(\n  Select.Indicator,\n  'indicator',\n)\n\nexport type ItemGroupLabelProps = ComponentProps<typeof ItemGroupLabel>\nexport const ItemGroupLabel = withContext<\n  Assign<HTMLStyledProps<'div'>, Select.ItemGroupLabelProps>\n>(Select.ItemGroupLabel, 'itemGroupLabel')\n\nexport type ItemGroupProps = ComponentProps<typeof ItemGroup>\nexport const ItemGroup = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemGroupProps>>(\n  Select.ItemGroup,\n  'itemGroup',\n)\n\nexport type ItemIndicatorProps = ComponentProps<typeof ItemIndicator>\nexport const ItemIndicator = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemIndicatorProps>>(\n  Select.ItemIndicator,\n  'itemIndicator',\n)\n\nexport type ItemProps = ComponentProps<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemProps>>(\n  Select.Item,\n  'item',\n)\n\nexport type ItemTextProps = ComponentProps<typeof ItemText>\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, Select.ItemTextProps>>(\n  Select.ItemText,\n  'itemText',\n)\n\nexport type LabelProps = ComponentProps<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Select.LabelProps>>(\n  Select.Label,\n  'label',\n)\n\nexport type ListProps = ComponentProps<typeof List>\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Select.ListProps>>(\n  Select.List,\n  'list',\n)\n\nexport type PositionerProps = ComponentProps<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Select.PositionerProps>>(\n  Select.Positioner,\n  'positioner',\n)\n\nexport type TriggerProps = ComponentProps<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Select.TriggerProps>>(\n  Select.Trigger,\n  'trigger',\n)\n\nexport type ValueTextProps = ComponentProps<typeof ValueText>\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Select.ValueTextProps>>(\n  Select.ValueText,\n  'valueText',\n)\n\nexport {\n  SelectContext as Context,\n  type SelectContextProps as ContextProps,\n  SelectHiddenSelect as HiddenSelect,\n  type SelectHiddenSelectProps as HiddenSelectProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
