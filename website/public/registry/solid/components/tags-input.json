{
  "files": [
    {
      "filename": "tags-input.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, TagsInput } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { tagsInput } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tagsInput)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, TagsInput.RootProviderProps>\n>(TagsInput.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, TagsInput.RootProps>>(\n  TagsInput.Root,\n  'root',\n)\n\nexport type ClearTriggerProps = ComponentProps<typeof ClearTrigger>\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, TagsInput.ClearTriggerProps>\n>(TagsInput.ClearTrigger, 'clearTrigger')\n\nexport type ControlProps = ComponentProps<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, TagsInput.ControlProps>>(\n  TagsInput.Control,\n  'control',\n)\n\nexport type InputProps = ComponentProps<typeof Input>\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, TagsInput.InputProps>>(\n  TagsInput.Input,\n  'input',\n)\n\nexport type ItemDeleteTriggerProps = ComponentProps<typeof ItemDeleteTrigger>\nexport const ItemDeleteTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, TagsInput.ItemDeleteTriggerProps>\n>(TagsInput.ItemDeleteTrigger, 'itemDeleteTrigger')\n\nexport type ItemInputProps = ComponentProps<typeof ItemInput>\nexport const ItemInput = withContext<Assign<HTMLStyledProps<'input'>, TagsInput.ItemInputProps>>(\n  TagsInput.ItemInput,\n  'itemInput',\n)\n\nexport type ItemPreviewProps = ComponentProps<typeof ItemPreview>\nexport const ItemPreview = withContext<Assign<HTMLStyledProps<'div'>, TagsInput.ItemPreviewProps>>(\n  TagsInput.ItemPreview,\n  'itemPreview',\n)\n\nexport type ItemProps = ComponentProps<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, TagsInput.ItemProps>>(\n  TagsInput.Item,\n  'item',\n)\n\nexport type ItemTextProps = ComponentProps<typeof ItemText>\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, TagsInput.ItemTextProps>>(\n  TagsInput.ItemText,\n  'itemText',\n)\n\nexport type LabelProps = ComponentProps<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, TagsInput.LabelProps>>(\n  TagsInput.Label,\n  'label',\n)\n\nexport {\n  TagsInputContext as Context,\n  type TagsInputContextProps as ContextProps,\n  TagsInputHiddenInput as HiddenInput,\n  type TagsInputHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
