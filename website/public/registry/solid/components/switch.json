{
  "files": [
    {
      "filename": "switch.tsx",
      "hasMultipleParts": true,
      "content": "import { type Assign, Switch } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { switchRecipe } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(switchRecipe)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'label'>, Switch.RootProviderProps>\n>(Switch.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'label'>, Switch.RootProps>>(\n  Switch.Root,\n  'root',\n)\n\nexport type ControlProps = ComponentProps<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'span'>, Switch.ControlProps>>(\n  Switch.Control,\n  'control',\n)\n\nexport type LabelProps = ComponentProps<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'span'>, Switch.LabelProps>>(\n  Switch.Label,\n  'label',\n)\n\nexport type ThumbProps = ComponentProps<typeof Thumb>\nexport const Thumb = withContext<Assign<HTMLStyledProps<'span'>, Switch.ThumbProps>>(\n  Switch.Thumb,\n  'thumb',\n)\n\nexport {\n  SwitchContext as Context,\n  type SwitchContextProps as ContextProps,\n  SwitchHiddenInput as HiddenInput,\n  type SwitchHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n"
    }
  ]
}
