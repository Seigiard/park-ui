{
  "files": [
    {
      "filename": "checkbox.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Checkbox } from '@ark-ui/react/checkbox'\nimport { type CheckboxVariantProps, checkbox } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(checkbox)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLLabelElement,\n  Assign<Assign<HTMLStyledProps<'label'>, Checkbox.RootProviderBaseProps>, CheckboxVariantProps>\n>(Checkbox.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLLabelElement,\n  Assign<Assign<HTMLStyledProps<'label'>, Checkbox.RootBaseProps>, CheckboxVariantProps>\n>(Checkbox.Root, 'root')\n\nexport const Control = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Checkbox.ControlBaseProps>\n>(Checkbox.Control, 'control')\n\nexport const Group = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Checkbox.GroupBaseProps>\n>(Checkbox.Group, 'group')\n\nexport const Indicator = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Checkbox.IndicatorBaseProps>\n>(Checkbox.Indicator, 'indicator')\n\nexport const Label = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<'span'>, Checkbox.LabelBaseProps>\n>(Checkbox.Label, 'label')\n\nexport {\n  CheckboxContext as Context,\n  type CheckboxContextProps as ContextProps,\n  CheckboxHiddenInput as HiddenInput,\n  type CheckboxHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/react/checkbox'\n"
    }
  ]
}
