{
  "files": [
    {
      "filename": "pin-input.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/react'\nimport { PinInput } from '@ark-ui/react/pin-input'\nimport { type PinInputVariantProps, pinInput } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(pinInput)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, PinInput.RootProviderBaseProps>, PinInputVariantProps>\n>(PinInput.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, PinInput.RootBaseProps>, PinInputVariantProps>\n>(PinInput.Root, 'root')\n\nexport const Control = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, PinInput.ControlBaseProps>\n>(PinInput.Control, 'control')\n\nexport const Input = withContext<\n  HTMLInputElement,\n  Assign<HTMLStyledProps<'input'>, PinInput.InputBaseProps>\n>(PinInput.Input, 'input')\n\nexport const Label = withContext<\n  HTMLLabelElement,\n  Assign<HTMLStyledProps<'label'>, PinInput.LabelBaseProps>\n>(PinInput.Label, 'label')\n\nexport {\n  PinInputContext as Context,\n  type PinInputContextProps as ContextProps,\n  PinInputHiddenInput as HiddenInput,\n  type PinInputHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/react/pin-input'\n"
    }
  ]
}
