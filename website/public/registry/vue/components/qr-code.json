{
  "files": [
    {
      "filename": "qr-code.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { QrCode } from '@ark-ui/vue/qr-code'\nimport { qrCode } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(qrCode)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, QrCode.RootProviderBaseProps>\n>(QrCode.RootProvider, 'root')\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, QrCode.RootBaseProps>>(\n  QrCode.Root,\n  'root',\n)\n\nexport type FrameProps = Component<typeof Frame>\nexport const Frame = withContext<Assign<HTMLStyledProps<'svg'>, QrCode.FrameBaseProps>>(\n  QrCode.Frame,\n  'frame',\n)\n\nexport type OverlayProps = Component<typeof Overlay>\nexport const Overlay = withContext<Assign<HTMLStyledProps<'div'>, QrCode.OverlayBaseProps>>(\n  QrCode.Overlay,\n  'overlay',\n)\n\nexport type PatternProps = Component<typeof Pattern>\nexport const Pattern = withContext<Assign<HTMLStyledProps<'path'>, QrCode.PatternBaseProps>>(\n  QrCode.Pattern,\n  'pattern',\n)\n\nexport {\n  QrCodeContext as Context,\n  type QrCodeContextProps as ContextProps,\n} from '@ark-ui/vue/qr-code'\n"
    }
  ]
}
