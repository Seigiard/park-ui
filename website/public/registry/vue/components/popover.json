{
  "files": [
    {
      "filename": "popover.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { Popover } from '@ark-ui/vue/popover'\nimport { popover } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(popover)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withRootProvider<Popover.RootProviderBaseProps>(Popover.RootProvider)\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withRootProvider<Popover.RootBaseProps>(Popover.Root)\n\nexport type AnchorProps = Component<typeof Anchor>\nexport const Anchor = withContext<Assign<HTMLStyledProps<'div'>, Popover.AnchorBaseProps>>(\n  Popover.Anchor,\n  'anchor',\n)\n\nexport type ArrowProps = Component<typeof Arrow>\nexport const Arrow = withContext<Assign<HTMLStyledProps<'div'>, Popover.ArrowBaseProps>>(\n  Popover.Arrow,\n  'arrow',\n)\n\nexport type ArrowTipProps = Component<typeof ArrowTip>\nexport const ArrowTip = withContext<Assign<HTMLStyledProps<'div'>, Popover.ArrowTipBaseProps>>(\n  Popover.ArrowTip,\n  'arrowTip',\n)\n\nexport type CloseTriggerProps = Component<typeof CloseTrigger>\nexport const CloseTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Popover.CloseTriggerBaseProps>\n>(Popover.CloseTrigger, 'closeTrigger')\n\nexport type ContentProps = Component<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Popover.ContentBaseProps>>(\n  Popover.Content,\n  'content',\n)\n\nexport type DescriptionProps = Component<typeof Description>\nexport const Description = withContext<\n  Assign<HTMLStyledProps<'div'>, Popover.DescriptionBaseProps>\n>(Popover.Description, 'description')\n\nexport type IndicatorProps = Component<typeof Indicator>\nexport const Indicator = withContext<Assign<HTMLStyledProps<'div'>, Popover.IndicatorBaseProps>>(\n  Popover.Indicator,\n  'indicator',\n)\n\nexport type PositionerProps = Component<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Popover.PositionerBaseProps>>(\n  Popover.Positioner,\n  'positioner',\n)\n\nexport type TitleProps = Component<typeof Title>\nexport const Title = withContext<Assign<HTMLStyledProps<'div'>, Popover.TitleBaseProps>>(\n  Popover.Title,\n  'title',\n)\n\nexport type TriggerProps = Component<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Popover.TriggerBaseProps>>(\n  Popover.Trigger,\n  'trigger',\n)\n\nexport {\n  PopoverContext as Context,\n  type PopoverContextProps as ContextProps,\n} from '@ark-ui/vue/popover'\n"
    }
  ]
}
