{
  "files": [
    {
      "filename": "accordion.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { Accordion } from '@ark-ui/vue/accordion'\nimport { accordion } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(accordion)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, Accordion.RootProviderBaseProps>\n>(Accordion.RootProvider, 'root')\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, Accordion.RootBaseProps>>(\n  Accordion.Root,\n  'root',\n)\n\nexport type ItemContentProps = Component<typeof ItemContent>\nexport const ItemContent = withContext<\n  Assign<HTMLStyledProps<'div'>, Accordion.ItemContentBaseProps>\n>(Accordion.ItemContent, 'itemContent')\n\nexport type ItemIndicatorProps = Component<typeof ItemIndicator>\nexport const ItemIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, Accordion.ItemIndicatorBaseProps>\n>(Accordion.ItemIndicator, 'itemIndicator')\n\nexport type ItemProps = Component<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Accordion.ItemBaseProps>>(\n  Accordion.Item,\n  'item',\n)\n\nexport type ItemTriggerProps = Component<typeof ItemTrigger>\nexport const ItemTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Accordion.ItemTriggerBaseProps>\n>(Accordion.ItemTrigger, 'itemTrigger')\n\nexport {\n  AccordionContext as Context,\n  type AccordionContextProps as ContextProps,\n} from '@ark-ui/vue/accordion'\n"
    }
  ]
}
