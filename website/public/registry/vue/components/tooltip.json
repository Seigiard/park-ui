{
  "files": [
    {
      "filename": "tooltip.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { Tooltip } from '@ark-ui/vue/tooltip'\nimport { tooltip } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(tooltip)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withRootProvider<Tooltip.RootProviderBaseProps>(Tooltip.RootProvider)\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withRootProvider<Tooltip.RootBaseProps>(Tooltip.Root)\n\nexport type ArrowProps = Component<typeof Arrow>\nexport const Arrow = withContext<Assign<HTMLStyledProps<'div'>, Tooltip.ArrowBaseProps>>(\n  Tooltip.Arrow,\n  'arrow',\n)\n\nexport type ArrowTipProps = Component<typeof ArrowTip>\nexport const ArrowTip = withContext<Assign<HTMLStyledProps<'div'>, Tooltip.ArrowTipBaseProps>>(\n  Tooltip.ArrowTip,\n  'arrowTip',\n)\n\nexport type ContentProps = Component<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Tooltip.ContentBaseProps>>(\n  Tooltip.Content,\n  'content',\n)\n\nexport type PositionerProps = Component<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Tooltip.PositionerBaseProps>>(\n  Tooltip.Positioner,\n  'positioner',\n)\n\nexport type TriggerProps = Component<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Tooltip.TriggerBaseProps>>(\n  Tooltip.Trigger,\n  'trigger',\n)\n\nexport {\n  TooltipContext as Context,\n  type TooltipContextProps as ContextProps,\n} from '@ark-ui/vue/tooltip'\n"
    }
  ]
}
