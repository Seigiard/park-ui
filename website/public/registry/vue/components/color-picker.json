{
  "files": [
    {
      "filename": "color-picker.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { ColorPicker } from '@ark-ui/vue/color-picker'\nimport { colorPicker } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.RootProviderBaseProps>\n>(ColorPicker.RootProvider, 'root')\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, ColorPicker.RootBaseProps>>(\n  ColorPicker.Root,\n  'root',\n)\n\nexport type AreaBackgroundProps = Component<typeof AreaBackground>\nexport const AreaBackground = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.AreaBackgroundBaseProps>\n>(ColorPicker.AreaBackground, 'areaBackground')\n\nexport type AreaProps = Component<typeof Area>\nexport const Area = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.AreaBaseProps>>(\n  ColorPicker.Area,\n  'area',\n)\n\nexport type AreaThumbProps = Component<typeof AreaThumb>\nexport const AreaThumb = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.AreaThumbBaseProps>\n>(ColorPicker.AreaThumb, 'areaThumb')\n\nexport type ChannelInputProps = Component<typeof ChannelInput>\nexport const ChannelInput = withContext<\n  Assign<HTMLStyledProps<'input'>, ColorPicker.ChannelInputBaseProps>\n>(ColorPicker.ChannelInput, 'channelInput')\n\nexport type ChannelSliderLabelProps = Component<typeof ChannelSliderLabel>\nexport const ChannelSliderLabel = withContext<\n  Assign<HTMLStyledProps<'label'>, ColorPicker.ChannelSliderLabelBaseProps>\n>(ColorPicker.ChannelSliderLabel, 'channelSliderLabel')\n\nexport type ChannelSliderProps = Component<typeof ChannelSlider>\nexport const ChannelSlider = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderBaseProps>\n>(ColorPicker.ChannelSlider, 'channelSlider')\n\nexport type ChannelSliderThumbProps = Component<typeof ChannelSliderThumb>\nexport const ChannelSliderThumb = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderThumbBaseProps>\n>(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\n\nexport type ChannelSliderTrackProps = Component<typeof ChannelSliderTrack>\nexport const ChannelSliderTrack = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderTrackBaseProps>\n>(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\n\nexport type ChannelSliderValueTextProps = Component<typeof ChannelSliderValueText>\nexport const ChannelSliderValueText = withContext<\n  Assign<HTMLStyledProps<'span'>, ColorPicker.ChannelSliderValueTextBaseProps>\n>(ColorPicker.ChannelSliderValueText, 'channelSliderValueText')\n\nexport type ContentProps = Component<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ContentBaseProps>>(\n  ColorPicker.Content,\n  'content',\n)\n\nexport type ControlProps = Component<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ControlBaseProps>>(\n  ColorPicker.Control,\n  'control',\n)\n\nexport type EyeDropperTriggerProps = Component<typeof EyeDropperTrigger>\nexport const EyeDropperTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.EyeDropperTriggerBaseProps>\n>(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\n\nexport type FormatSelectProps = Component<typeof FormatSelect>\nexport const FormatSelect = withContext<\n  Assign<HTMLStyledProps<'select'>, ColorPicker.FormatSelectBaseProps>\n>(ColorPicker.FormatSelect, 'formatSelect')\n\nexport type FormatTriggerProps = Component<typeof FormatTrigger>\nexport const FormatTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.FormatTriggerBaseProps>\n>(ColorPicker.FormatTrigger, 'formatTrigger')\n\nexport type LabelProps = Component<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, ColorPicker.LabelBaseProps>>(\n  ColorPicker.Label,\n  'label',\n)\n\nexport type PositionerProps = Component<typeof Positioner>\nexport const Positioner = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.PositionerBaseProps>\n>(ColorPicker.Positioner, 'positioner')\n\nexport type SwatchGroupProps = Component<typeof SwatchGroup>\nexport const SwatchGroup = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchGroupBaseProps>\n>(ColorPicker.SwatchGroup, 'swatchGroup')\n\nexport type SwatchIndicatorProps = Component<typeof SwatchIndicator>\nexport const SwatchIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchIndicatorBaseProps>\n>(ColorPicker.SwatchIndicator, 'swatchIndicator')\n\nexport type SwatchProps = Component<typeof Swatch>\nexport const Swatch = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchBaseProps>>(\n  ColorPicker.Swatch,\n  'swatch',\n)\n\nexport type SwatchTriggerProps = Component<typeof SwatchTrigger>\nexport const SwatchTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.SwatchTriggerBaseProps>\n>(ColorPicker.SwatchTrigger, 'swatchTrigger')\n\nexport type TransparencyGridProps = Component<typeof TransparencyGrid>\nexport const TransparencyGrid = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.TransparencyGridBaseProps>\n>(ColorPicker.TransparencyGrid, 'transparencyGrid')\n\nexport type TriggerProps = Component<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, ColorPicker.TriggerBaseProps>>(\n  ColorPicker.Trigger,\n  'trigger',\n)\n\nexport type ValueSwatchProps = Component<typeof ValueSwatch>\nexport const ValueSwatch = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ValueSwatchBaseProps>\n>(ColorPicker.ValueSwatch, 'valueSwatch')\n\nexport type ValueTextProps = Component<typeof ValueText>\nexport const ValueText = withContext<\n  Assign<HTMLStyledProps<'span'>, ColorPicker.ValueTextBaseProps>\n>(ColorPicker.ValueText, 'valueText')\n\nexport type ViewProps = Component<typeof View>\nexport const View = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ViewBaseProps>>(\n  ColorPicker.View,\n  'view',\n)\n\nexport {\n  ColorPickerContext as Context,\n  type ColorPickerContextProps as ContextProps,\n  ColorPickerHiddenInput as HiddenInput,\n  type ColorPickerHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/vue/color-picker'\n"
    }
  ]
}
