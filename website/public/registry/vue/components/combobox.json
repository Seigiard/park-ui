{
  "files": [
    {
      "filename": "combobox.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { Combobox } from '@ark-ui/vue/combobox'\nimport { combobox } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(combobox)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withRootProvider<Combobox.RootProviderBaseProps>(Combobox.RootProvider)\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withRootProvider<Combobox.RootBaseProps>(Combobox.Root)\n\nexport type ClearTriggerProps = Component<typeof ClearTrigger>\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Combobox.ClearTriggerBaseProps>\n>(Combobox.ClearTrigger, 'clearTrigger')\n\nexport type ContentProps = Component<typeof Content>\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ContentBaseProps>>(\n  Combobox.Content,\n  'content',\n)\n\nexport type ControlProps = Component<typeof Control>\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ControlBaseProps>>(\n  Combobox.Control,\n  'control',\n)\n\nexport type InputProps = Component<typeof Input>\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, Combobox.InputBaseProps>>(\n  Combobox.Input,\n  'input',\n)\n\nexport type ItemGroupLabelProps = Component<typeof ItemGroupLabel>\nexport const ItemGroupLabel = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupLabelBaseProps>\n>(Combobox.ItemGroupLabel, 'itemGroupLabel')\n\nexport type ItemGroupProps = Component<typeof ItemGroup>\nexport const ItemGroup = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupBaseProps>>(\n  Combobox.ItemGroup,\n  'itemGroup',\n)\n\nexport type ItemIndicatorProps = Component<typeof ItemIndicator>\nexport const ItemIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemIndicatorBaseProps>\n>(Combobox.ItemIndicator, 'itemIndicator')\n\nexport type ItemProps = Component<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemBaseProps>>(\n  Combobox.Item,\n  'item',\n)\n\nexport type ItemTextProps = Component<typeof ItemText>\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, Combobox.ItemTextBaseProps>>(\n  Combobox.ItemText,\n  'itemText',\n)\n\nexport type LabelProps = Component<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Combobox.LabelBaseProps>>(\n  Combobox.Label,\n  'label',\n)\n\nexport type ListProps = Component<typeof List>\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ListBaseProps>>(\n  Combobox.List,\n  'list',\n)\n\nexport type PositionerProps = Component<typeof Positioner>\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Combobox.PositionerBaseProps>>(\n  Combobox.Positioner,\n  'positioner',\n)\n\nexport type TriggerProps = Component<typeof Trigger>\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Combobox.TriggerBaseProps>>(\n  Combobox.Trigger,\n  'trigger',\n)\n\nexport {\n  ComboboxContext as Context,\n  type ComboboxContextProps as ContextProps,\n} from '@ark-ui/vue/combobox'\n"
    }
  ]
}
