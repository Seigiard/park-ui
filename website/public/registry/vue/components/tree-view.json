{
  "files": [
    {
      "filename": "tree-view.tsx",
      "hasMultipleParts": true,
      "content": "import type { Assign } from '@ark-ui/vue'\nimport { TreeView } from '@ark-ui/vue/tree-view'\nimport { treeView } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport type { Component } from 'vue'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(treeView)\n\nexport type RootProviderProps = Component<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<HTMLStyledProps<'div'>, TreeView.RootProviderBaseProps>\n>(TreeView.RootProvider, 'root')\n\nexport type RootProps = Component<typeof Root>\nexport const Root = withProvider<Assign<HTMLStyledProps<'div'>, TreeView.RootBaseProps>>(\n  TreeView.Root,\n  'root',\n)\n\nexport type BranchContentProps = Component<typeof BranchContent>\nexport const BranchContent = withContext<\n  Assign<HTMLStyledProps<'ul'>, TreeView.BranchContentBaseProps>\n>(TreeView.BranchContent, 'branchContent')\n\nexport type BranchControlProps = Component<typeof BranchControl>\nexport const BranchControl = withContext<\n  Assign<HTMLStyledProps<'div'>, TreeView.BranchControlBaseProps>\n>(TreeView.BranchControl, 'branchControl')\n\nexport type BranchIndicatorProps = Component<typeof BranchIndicator>\nexport const BranchIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, TreeView.BranchIndicatorBaseProps>\n>(TreeView.BranchIndicator, 'branchIndicator')\n\nexport type BranchProps = Component<typeof Branch>\nexport const Branch = withContext<Assign<HTMLStyledProps<'li'>, TreeView.BranchBaseProps>>(\n  TreeView.Branch,\n  'branch',\n)\n\nexport type BranchTextProps = Component<typeof BranchText>\nexport const BranchText = withContext<\n  Assign<HTMLStyledProps<'span'>, TreeView.BranchTextBaseProps>\n>(TreeView.BranchText, 'branchText')\n\nexport type BranchTriggerProps = Component<typeof BranchTrigger>\nexport const BranchTrigger = withContext<\n  Assign<HTMLStyledProps<'div'>, TreeView.BranchTriggerBaseProps>\n>(TreeView.BranchTrigger, 'branchTrigger')\n\nexport type ItemIndicatorProps = Component<typeof ItemIndicator>\nexport const ItemIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, TreeView.ItemIndicatorBaseProps>\n>(TreeView.ItemIndicator, 'itemIndicator')\n\nexport type ItemProps = Component<typeof Item>\nexport const Item = withContext<Assign<HTMLStyledProps<'li'>, TreeView.ItemBaseProps>>(\n  TreeView.Item,\n  'item',\n)\n\nexport type ItemTextProps = Component<typeof ItemText>\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, TreeView.ItemTextBaseProps>>(\n  TreeView.ItemText,\n  'itemText',\n)\n\nexport type LabelProps = Component<typeof Label>\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, TreeView.LabelBaseProps>>(\n  TreeView.Label,\n  'label',\n)\n\nexport type TreeProps = Component<typeof Tree>\nexport const Tree = withContext<Assign<HTMLStyledProps<'ul'>, TreeView.TreeBaseProps>>(\n  TreeView.Tree,\n  'tree',\n)\n\nexport {\n  TreeViewContext as Context,\n  type TreeViewContextProps as ContextProps,\n} from '@ark-ui/vue/tree-view'\n"
    }
  ]
}
