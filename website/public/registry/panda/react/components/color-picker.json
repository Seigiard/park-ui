{
  "files": [
    {
      "filename": "color-picker.ts",
      "content": "import * as Ark from '@ark-ui/react/color-picker'\nimport { styled } from 'styled-system/jsx'\nimport { colorPicker, type ColorPickerVariantProps } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport * from '@ark-ui/react/color-picker'\nexport type ColorPickerProps = Ark.ColorPickerProps & ColorPickerVariantProps\n\nconst ColorPickerRoot = withProvider(styled(Ark.ColorPicker.Root), 'root')\nexport const ColorPickerArea = withContext(styled(Ark.ColorPicker.Area), 'area')\nexport const ColorPickerAreaBackground = withContext(\n  styled(Ark.ColorPicker.AreaBackground),\n  'areaBackground',\n)\nexport const ColorPickerAreaThumb = withContext(styled(Ark.ColorPicker.AreaThumb), 'areaThumb')\nexport const ColorPickerChannelInput = withContext(\n  styled(Ark.ColorPicker.ChannelInput),\n  'channelInput',\n)\nexport const ColorPickerChannelSlider = withContext(\n  styled(Ark.ColorPicker.ChannelSlider),\n  'channelSlider',\n)\nexport const ColorPickerChannelSliderThumb = withContext(\n  styled(Ark.ColorPicker.ChannelSliderThumb),\n  'channelSliderThumb',\n)\nexport const ColorPickerChannelSliderTrack = withContext(\n  styled(Ark.ColorPicker.ChannelSliderTrack),\n  'channelSliderTrack',\n)\nexport const ColorPickerContent = withContext(styled(Ark.ColorPicker.Content), 'content')\nexport const ColorPickerControl = withContext(styled(Ark.ColorPicker.Control), 'control')\nexport const ColorPickerEyeDropperTrigger = withContext(\n  styled(Ark.ColorPicker.EyeDropperTrigger),\n  'eyeDropperTrigger',\n)\nexport const ColorPickerFormatSelect = withContext(\n  styled(Ark.ColorPicker.FormatSelect),\n  'formatSelect',\n)\nexport const ColorPickerFormatTrigger = withContext(\n  styled(Ark.ColorPicker.FormatTrigger),\n  'formatTrigger',\n)\nexport const ColorPickerLabel = withContext(styled(Ark.ColorPicker.Label), 'label')\nexport const ColorPickerPositioner = withContext(styled(Ark.ColorPicker.Positioner), 'positioner')\nexport const ColorPickerSwatch = withContext(styled(Ark.ColorPicker.Swatch), 'swatch')\nexport const ColorPickerSwatchGroup = withContext(\n  styled(Ark.ColorPicker.SwatchGroup),\n  'swatchGroup',\n)\nexport const ColorPickerSwatchIndicator = withContext(\n  styled(Ark.ColorPicker.SwatchIndicator),\n  'swatchIndicator',\n)\nexport const ColorPickerSwatchTrigger = withContext(\n  styled(Ark.ColorPicker.SwatchTrigger),\n  'swatchTrigger',\n)\nexport const ColorPickerTransparencyGrid = withContext(\n  styled(Ark.ColorPicker.TransparencyGrid),\n  'transparencyGrid',\n)\nexport const ColorPickerTrigger = withContext(styled(Ark.ColorPicker.Trigger), 'trigger')\nexport const ColorPickerValueText = withContext(styled(Ark.ColorPicker.ValueText), 'valueText')\nexport const ColorPickerView = withContext(styled(Ark.ColorPicker.View), 'view')\n\nexport const ColorPicker = Object.assign(ColorPickerRoot, {\n  Root: ColorPickerRoot,\n  Area: ColorPickerArea,\n  AreaBackground: ColorPickerAreaBackground,\n  AreaThumb: ColorPickerAreaThumb,\n  ChannelInput: ColorPickerChannelInput,\n  ChannelSlider: ColorPickerChannelSlider,\n  ChannelSliderThumb: ColorPickerChannelSliderThumb,\n  ChannelSliderTrack: ColorPickerChannelSliderTrack,\n  Content: ColorPickerContent,\n  Control: ColorPickerControl,\n  EyeDropperTrigger: ColorPickerEyeDropperTrigger,\n  FormatSelect: ColorPickerFormatSelect,\n  FormatTrigger: ColorPickerFormatTrigger,\n  Label: ColorPickerLabel,\n  Positioner: ColorPickerPositioner,\n  Swatch: ColorPickerSwatch,\n  SwatchGroup: ColorPickerSwatchGroup,\n  SwatchIndicator: ColorPickerSwatchIndicator,\n  SwatchTrigger: ColorPickerSwatchTrigger,\n  TransparencyGrid: ColorPickerTransparencyGrid,\n  Trigger: ColorPickerTrigger,\n  ValueText: ColorPickerValueText,\n  View: ColorPickerView,\n})\n"
    }
  ]
}
